该工具理论上采用MVC的设计模式：

1.GUI是通过designer.exe 进行绘制出.ui文件，然后通过python.uic转换称py的GUI文件。
2.功能模块分别是sequence（ue组装相关函数） path（资产路径相关模块，包括本地路径和ue内部路径和服务器路径之间的相互转换） asset（读取加载ue相关资产）
3.GUI和功能模块通过Seq_Ass 关联到一起控制。




功能实现的思路：
    整个组装的过程是通过获取ue内部已经导入的资产，然后根据用户选择自动组装相应的sequence（这里要注意的是我们需要能辨别用户选取的角色资产的镜头信息和角色名称）。

1。由于ue内部功能函数无法做到读取文件夹下的文件夹，导致我们需要从本机的工程目录去读取相关的文件路径，当我们获取到所有的镜头文件路径之后。我们需要将本机工程路径转换到UE内部资产路径（Game起始的）进行资产的读取加载。并刷新到GUI界面。
2。根据用户选择的要组装的资产分解出镜头信息和角色信息，从而进行组装动作。
3. 由于组装的时候我们需要设置角色的帧数范围和sequence的设置和相关帧范围设置，所以将这些设置的相关信息存储在了maya输出的相机fbx文件到名称中。因此在每次组装动作执行的时候都会优先读取服务器相关的相机fbx文件如果读取不到就不执行组装。（相机的一些参数没有办法默认导入 所以也是通过信息单独进行设置。）




一些用户需求分析：
1. 从日常生产情况要考虑 第一次组装的情况和日后迭代的一些情形。（类似镜头中角色的增减，镜头帧数的变动）
2.导入过程中遇到的错误该如果提示用户或者直接后台处理掉（这个需求没有实施）
 


UE4 python外挂模块的接口请阅读github相关说明：
https://github.com/20tab/UnrealEnginePython 

python 接口的环境配置是通过配置文件中的ue_site.py文件进行初始化的  H:\script\UE4_TOOL\UE4_python_api\4.23\Plugins\UnrealEnginePython\Binaries\Win64
该文件在ue4 启动时加载python接口的时候自动运行，所以可以将运行环境变量放到这个文件进行初始化。